{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///squarespace-core-1.0.1.min.js","webpack:///webpack/bootstrap 9135a107b4ca33e20f2d","webpack:///./src/index.js","webpack:///./src/ImageLoader.js","webpack:///./src/Lifecycle.js","webpack:///./src/Tweak.js","webpack:///./src/UserAccounts.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_ImageLoader","_ImageLoader2","_Lifecycle","_Lifecycle2","_Tweak","_Tweak2","_UserAccounts","_UserAccounts2","SQS","ImageLoader","Lifecycle","Tweak","UserAccounts","load","img","config","window","init","Squarespace","AFTER_BODY_LOADED","afterBodyLoad","destroy","globalDestroy","Y","isAuthenticated","Static","SQUARESPACE_CONTEXT","authenticatedAccount","tweaksToWatch","all","callbacks","getValue","name","tweakJSON","replace","console","error","watch","_arguments","arguments","length","push","tweakName","constructor","Array","forEach","Global","on","e","getName","callbackSignature","callback","err","UserAccountsApi"],"mappings":"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","file":"squarespace-core-1.0.1.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SQS\"] = factory();\n\telse\n\t\troot[\"SQS\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SQS\"] = factory();\n\telse\n\t\troot[\"SQS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ImageLoader = __webpack_require__(1);\n\t\n\tvar _ImageLoader2 = _interopRequireDefault(_ImageLoader);\n\t\n\tvar _Lifecycle = __webpack_require__(2);\n\t\n\tvar _Lifecycle2 = _interopRequireDefault(_Lifecycle);\n\t\n\tvar _Tweak = __webpack_require__(3);\n\t\n\tvar _Tweak2 = _interopRequireDefault(_Tweak);\n\t\n\tvar _UserAccounts = __webpack_require__(4);\n\t\n\tvar _UserAccounts2 = _interopRequireDefault(_UserAccounts);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * The public JavaScript API for Squarespace template developers.\n\t * @namespace SQS\n\t */\n\t/**\n\t * @license\n\t * Copyright 2016 Squarespace, INC.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *    http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar SQS = {\n\t  ImageLoader: _ImageLoader2.default,\n\t  Lifecycle: _Lifecycle2.default,\n\t  Tweak: _Tweak2.default,\n\t  UserAccounts: _UserAccounts2.default\n\t};\n\t\n\texports.default = SQS;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2016 Squarespace, INC.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *    http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * ​Squarespace comes with a number of built-in facilities for managing images\n\t * that are uploaded to our system. After uploading an image into a collection,\n\t * Squarespace automatically creates multiple copies of the image with different \n\t * sizes. Our ImageLoader will then help render images properly when they are\n\t * presented on a page, even on retina displays.\n\t *\n\t * ImageLoader can also be used to fit or fill an image inside ​a parent\n\t * container, where it automatically determines which image size to use\n\t * depending on the current dimensions of the container.\n\t *\n\t * WARNING:\n\t * Currently, ImageLoader is present on all Squarespace sites under the global\n\t * namespace ImageLoader, but this is an unsupported API and we recommend\n\t * accessing this functionality through squarespace-core.\n\t *\n\t * @namespace ImageLoader\n\t */\n\tvar ImageLoader = {\n\t\n\t  /**\n\t   * Using the global ImageLoader namespace, calls ImageLoader.load on the\n\t   * given node with the given config options.\n\t   *\n\t   * @method load\n\t   * @param  {HTMLElement} img    Image node to be loaded\n\t   * @param  {Object} config      Config object\n\t   * @return {Boolean}            True if the image was loaded, false otherwise\n\t   */\n\t  load: function load(img, config) {\n\t    return window.ImageLoader.load(img, config);\n\t  }\n\t};\n\t\n\t/**\n\t * @exports {Object} ImageLoader\n\t */\n\texports.default = ImageLoader;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2016 Squarespace, INC.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *    http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * Squarespace provides default functionality for some content that users add\n\t * in the CMS.\n\t *\n\t * If you are building a Developer Platform site that loads Squarespace content\n\t * through an XHR or some other kind of AJAX, you can use the Lifecycle methods\n\t * provided here to initialize and/or destroy this functionality.\n\t *\n\t * WARNING:\n\t * The functionality called by Lifecycle is available on the global namespace\n\t * window.Squarespace, but this is an unsupported API and it is highly\n\t * recommended that you access it through squarespace-core.\n\t *\n\t * @namespace Lifecycle\n\t */\n\tvar Lifecycle = {\n\t\n\t  /**\n\t   * Squarespace.afterBodyLoad() trigger loads scripts and calls onInitialize,\n\t   * which individual modules' init functions are bound to. This should be\n\t   * called after new HTML content containing Squarespace default functionality\n\t   * is added to a page (for example, after AJAX loading a new page).\n\t   *\n\t   * @method init\n\t   */\n\t  init: function init() {\n\t    window.Squarespace.AFTER_BODY_LOADED = false;\n\t    window.Squarespace.afterBodyLoad();\n\t  },\n\t\n\t\n\t  /**\n\t   * Squarespace.globalDestroy calls onDestroy, triggering each module's\n\t   * destructor. This should be called prior to loading in new HTML content\n\t   * containing Squarespace default functionality.\n\t   *\n\t   * @method  destroy\n\t   */\n\t  destroy: function destroy() {\n\t    window.Squarespace.globalDestroy(Y);\n\t  }\n\t};\n\t\n\t/**\n\t * @exports {Object} Lifecycle\n\t */\n\texports.default = Lifecycle;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2016 Squarespace, INC.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *    http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar isAuthenticated = Static.SQUARESPACE_CONTEXT.authenticatedAccount;\n\t\n\t/**\n\t * @const {Object} tweaksToWatch\n\t */\n\tvar tweaksToWatch = {\n\t  all: {\n\t    callbacks: []\n\t  }\n\t};\n\t\n\t/**\n\t * Tweaks allow a developer to isolate specific elements of the design and\n\t * present options to the user in an easy-to-use interface. Tweaks are surfaced\n\t * in the Squarespace interface through Style Editor (e.g.\n\t * yoursite.squarespace.com/config/design/style). Using tweaks, a user can make\n\t * presentational changes to their website without having to know or edit CSS code.\n\t *\n\t * Tweaks are typically used by the developers through LESS variables, mixins,\n\t * and class names added to the <body> element.\n\t *\n\t * Sometimes, a developer may find it necessary to access the value of a tweak\n\t * through Javascript, or to watch for changes in that tweak and update the DOM\n\t * accordingly. The Tweak module of squarespace-core is meant to provide an\n\t * official interface for doing so.\n\t *\n\t * @namespace Tweak\n\t */\n\tvar Tweak = {\n\t\n\t  /**\n\t   * Gets the value of one of the tweaks given its name.\n\t   *\n\t   * @method getValue\n\t   * @param {String} name      Name of the tweak\n\t   * @returns {String}         The value of the tweak\n\t   */\n\t  getValue: function getValue(name) {\n\t    if (!name || typeof name !== 'string') {\n\t      console.error('squarespace-core: Invalid tweak name ' + name);\n\t      return null;\n\t    }\n\t\n\t    return window.Static.SQUARESPACE_CONTEXT.tweakJSON[name] || window.Static.SQUARESPACE_CONTEXT.tweakJSON[name.replace('@', '').replace('.', '')];\n\t  },\n\t\n\t\n\t  /**\n\t   * Listen for changes on a tweak item. If one parameter is provided, the\n\t   * callback will be executed every time any tweak changes. If two parameters\n\t   * are provided and the first parameter is a String, the callback will be\n\t   * executed only when that particular tweak changes. If two parameters are\n\t   * provided and the first parameter is an Array of strings, the callback will\n\t   * be executed any time one of those tweaks changes.\n\t   *\n\t   * @method watch\n\t   * @param {String}          Optional: Name of the tweak\n\t   * @param {Array}           Optional: Array with multiple tweak names\n\t   * @param {Function}        Callback to call when watcher is triggered\n\t   */\n\t  watch: function watch() {\n\t    var _arguments = arguments;\n\t\n\t\n\t    if (!isAuthenticated) {\n\t      return;\n\t    }\n\t\n\t    if (arguments.length === 0) {\n\t      console.error('squarespace-core: ' + 'Tweak.watch must be called with at least one parameter');\n\t      return;\n\t    }\n\t\n\t    if (arguments.length === 1) {\n\t      // Only callback passed in, no tweak name string or tweaks array passed.\n\t      // Run callback for all tweaks.\n\t      if (typeof arguments[0] === 'function') {\n\t        tweaksToWatch.all.callbacks.push(arguments[0]);\n\t      }\n\t      return;\n\t    }\n\t\n\t    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {\n\t      // Specific tweak name passed in. Run callback when that tweak is changed.\n\t      var tweakName = arguments[0];\n\t      if (!tweaksToWatch[tweakName]) {\n\t        tweaksToWatch[tweakName] = {\n\t          callbacks: []\n\t        };\n\t      }\n\t      tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n\t    } else if (arguments[0].constructor === Array && typeof arguments[1] === 'function') {\n\t      // Multiple tweak names passed in as array. Run callback when any one of\n\t      // those tweaks are changed.\n\t      arguments[0].forEach(function (tweakName) {\n\t        if (!tweaksToWatch[tweakName]) {\n\t          tweaksToWatch[tweakName] = {\n\t            callbacks: []\n\t          };\n\t        }\n\t        tweaksToWatch[tweakName].callbacks.push(_arguments[1]);\n\t      });\n\t    }\n\t  }\n\t};\n\t\n\tif (isAuthenticated && window.Y && window.Y.Global) {\n\t  // If Y.Global is present on the page, set up the tweak event listener.\n\t  window.Y.Global.on('tweak:change', function (e) {\n\t    var tweakName = e.getName();\n\t    var callbackSignature = {\n\t      name: tweakName,\n\t      value: e.config && e.config.value || e.value\n\t    };\n\t\n\t    if (tweaksToWatch[tweakName]) {\n\t      tweaksToWatch[tweakName].callbacks.forEach(function (callback) {\n\t        try {\n\t          callback(callbackSignature);\n\t        } catch (err) {\n\t          console.error(err);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (tweaksToWatch.all.callbacks.length > 0) {\n\t      tweaksToWatch.all.callbacks.forEach(function (callback) {\n\t        try {\n\t          callback(callbackSignature);\n\t        } catch (err) {\n\t          console.error(err);\n\t        }\n\t      });\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * @exports {Object} Tweak\n\t */\n\texports.default = Tweak;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2016 Squarespace, INC.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *    http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\texports.default = window.UserAccountsApi;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// squarespace-core-1.0.1.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9135a107b4ca33e20f2d","/**\n * @license\n * Copyright 2016 Squarespace, INC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ImageLoader from './ImageLoader';\nimport Lifecycle from './Lifecycle';\nimport Tweak from './Tweak';\nimport UserAccounts from './UserAccounts';\n\n/**\n * The public JavaScript API for Squarespace template developers.\n * @namespace SQS\n */\nconst SQS = {\n  ImageLoader,\n  Lifecycle,\n  Tweak,\n  UserAccounts\n};\n\nexport default SQS;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * @license\n * Copyright 2016 Squarespace, INC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * ​Squarespace comes with a number of built-in facilities for managing images\n * that are uploaded to our system. After uploading an image into a collection,\n * Squarespace automatically creates multiple copies of the image with different \n * sizes. Our ImageLoader will then help render images properly when they are\n * presented on a page, even on retina displays.\n *\n * ImageLoader can also be used to fit or fill an image inside ​a parent\n * container, where it automatically determines which image size to use\n * depending on the current dimensions of the container.\n *\n * WARNING:\n * Currently, ImageLoader is present on all Squarespace sites under the global\n * namespace ImageLoader, but this is an unsupported API and we recommend\n * accessing this functionality through squarespace-core.\n *\n * @namespace ImageLoader\n */\nconst ImageLoader = {\n\n  /**\n   * Using the global ImageLoader namespace, calls ImageLoader.load on the\n   * given node with the given config options.\n   *\n   * @method load\n   * @param  {HTMLElement} img    Image node to be loaded\n   * @param  {Object} config      Config object\n   * @return {Boolean}            True if the image was loaded, false otherwise\n   */\n  load(img, config) {\n    return window.ImageLoader.load(img, config);\n  }\n};\n\n/**\n * @exports {Object} ImageLoader\n */\nexport default ImageLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ImageLoader.js","/**\n * @license\n * Copyright 2016 Squarespace, INC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Squarespace provides default functionality for some content that users add\n * in the CMS.\n *\n * If you are building a Developer Platform site that loads Squarespace content\n * through an XHR or some other kind of AJAX, you can use the Lifecycle methods\n * provided here to initialize and/or destroy this functionality.\n *\n * WARNING:\n * The functionality called by Lifecycle is available on the global namespace\n * window.Squarespace, but this is an unsupported API and it is highly\n * recommended that you access it through squarespace-core.\n *\n * @namespace Lifecycle\n */\nconst Lifecycle = {\n\n  /**\n   * Squarespace.afterBodyLoad() trigger loads scripts and calls onInitialize,\n   * which individual modules' init functions are bound to. This should be\n   * called after new HTML content containing Squarespace default functionality\n   * is added to a page (for example, after AJAX loading a new page).\n   *\n   * @method init\n   */\n  init() {\n    window.Squarespace.AFTER_BODY_LOADED = false;\n    window.Squarespace.afterBodyLoad();\n  },\n\n  /**\n   * Squarespace.globalDestroy calls onDestroy, triggering each module's\n   * destructor. This should be called prior to loading in new HTML content\n   * containing Squarespace default functionality.\n   *\n   * @method  destroy\n   */\n  destroy() {\n    window.Squarespace.globalDestroy(Y);\n  }\n\n};\n\n/**\n * @exports {Object} Lifecycle\n */\nexport default Lifecycle;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Lifecycle.js","/**\n * @license\n * Copyright 2016 Squarespace, INC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst isAuthenticated = Static.SQUARESPACE_CONTEXT.authenticatedAccount;\n\n/**\n * @const {Object} tweaksToWatch\n */\nconst tweaksToWatch = {\n  all: {\n    callbacks: []\n  }\n};\n\n/**\n * Tweaks allow a developer to isolate specific elements of the design and\n * present options to the user in an easy-to-use interface. Tweaks are surfaced\n * in the Squarespace interface through Style Editor (e.g.\n * yoursite.squarespace.com/config/design/style). Using tweaks, a user can make\n * presentational changes to their website without having to know or edit CSS code.\n *\n * Tweaks are typically used by the developers through LESS variables, mixins,\n * and class names added to the <body> element.\n *\n * Sometimes, a developer may find it necessary to access the value of a tweak\n * through Javascript, or to watch for changes in that tweak and update the DOM\n * accordingly. The Tweak module of squarespace-core is meant to provide an\n * official interface for doing so.\n *\n * @namespace Tweak\n */\nconst Tweak = {\n\n  /**\n   * Gets the value of one of the tweaks given its name.\n   *\n   * @method getValue\n   * @param {String} name      Name of the tweak\n   * @returns {String}         The value of the tweak\n   */\n  getValue(name) {\n    if (!name || typeof name !== 'string') {\n      console.error('squarespace-core: Invalid tweak name ' + name);\n      return null;\n    }\n\n    return (window.Static.SQUARESPACE_CONTEXT.tweakJSON[name] ||\n      window.Static.SQUARESPACE_CONTEXT.tweakJSON[name.replace('@', '').replace('.', '')]);\n  },\n\n  /**\n   * Listen for changes on a tweak item. If one parameter is provided, the\n   * callback will be executed every time any tweak changes. If two parameters\n   * are provided and the first parameter is a String, the callback will be\n   * executed only when that particular tweak changes. If two parameters are\n   * provided and the first parameter is an Array of strings, the callback will\n   * be executed any time one of those tweaks changes.\n   *\n   * @method watch\n   * @param {String}          Optional: Name of the tweak\n   * @param {Array}           Optional: Array with multiple tweak names\n   * @param {Function}        Callback to call when watcher is triggered\n   */\n  watch: function () {\n\n    if (!isAuthenticated) {\n      return;\n    }\n\n    if (arguments.length === 0) {\n      console.error('squarespace-core: ' +\n        'Tweak.watch must be called with at least one parameter');\n      return;\n    }\n\n    if (arguments.length === 1) {\n      // Only callback passed in, no tweak name string or tweaks array passed.\n      // Run callback for all tweaks.\n      if (typeof arguments[0] === 'function') {\n        tweaksToWatch.all.callbacks.push(arguments[0]);\n      }\n      return;\n    }\n\n    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {\n      // Specific tweak name passed in. Run callback when that tweak is changed.\n      const tweakName = arguments[0];\n      if (!tweaksToWatch[tweakName]) {\n        tweaksToWatch[tweakName] = {\n          callbacks: []\n        };\n      }\n      tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n    } else if (arguments[0].constructor === Array && typeof arguments[1] === 'function') {\n      // Multiple tweak names passed in as array. Run callback when any one of\n      // those tweaks are changed.\n      arguments[0].forEach((tweakName) => {\n        if (!tweaksToWatch[tweakName]) {\n          tweaksToWatch[tweakName] = {\n            callbacks: []\n          };\n        }\n        tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n      });\n    }\n  }\n};\n\nif (isAuthenticated && window.Y && window.Y.Global) {\n  // If Y.Global is present on the page, set up the tweak event listener.\n  window.Y.Global.on('tweak:change', (e) => {\n    const tweakName = e.getName();\n    const callbackSignature = {\n      name: tweakName,\n      value: e.config && e.config.value || e.value\n    };\n\n    if (tweaksToWatch[tweakName]) {\n      tweaksToWatch[tweakName].callbacks.forEach((callback) => {\n        try {\n          callback(callbackSignature);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n\n    if (tweaksToWatch.all.callbacks.length > 0) {\n      tweaksToWatch.all.callbacks.forEach((callback) => {\n        try {\n          callback(callbackSignature);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n  });\n}\n\n/**\n * @exports {Object} Tweak\n */\nexport default Tweak;\n\n\n// WEBPACK FOOTER //\n// ./src/Tweak.js","/**\n * @license\n * Copyright 2016 Squarespace, INC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default window.UserAccountsApi;\n\n\n// WEBPACK FOOTER //\n// ./src/UserAccounts.js"],"sourceRoot":""}